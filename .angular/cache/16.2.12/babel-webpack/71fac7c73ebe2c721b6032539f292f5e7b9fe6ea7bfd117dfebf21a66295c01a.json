{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { Constant } from \"src/app/shared/utils/constant.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GeoService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getGeo(location) {\n    let params = new HttpParams();\n    params.set(\"appid\", Constant.API_KEY_WEATHER_FORECAST);\n    params.set(\"q\", location);\n    params.set(\"limit\", 1);\n    return this.httpClient.get(Constant.PATH_GEO, {\n      params,\n      observe: \"response\"\n    });\n  }\n  static #_ = this.ɵfac = function GeoService_Factory(t) {\n    return new (t || GeoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GeoService,\n    factory: GeoService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpParams","Constant","GeoService","constructor","httpClient","getGeo","location","params","set","API_KEY_WEATHER_FORECAST","get","PATH_GEO","observe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/home/lanhvv/project/angular/weather_forecast/src/app/shared/service/geo.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport {  Injectable } from \"@angular/core\";\nimport {Constant} from \"src/app/shared/utils/constant.util\"\n@Injectable()\nexport class GeoService {\n    constructor(private httpClient : HttpClient) {\n\n    }\n    \n    public getGeo (location: string) {\n        let params = new HttpParams();\n        params.set(\"appid\", Constant.API_KEY_WEATHER_FORECAST);\n        params.set(\"q\", location);\n        params.set(\"limit\", 1);\n        return this.httpClient.get<any>(Constant.PATH_GEO, {params, observe : \"response\"});\n    }\n}"],"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAAQC,QAAQ,QAAO,oCAAoC;;;AAE3D,OAAM,MAAOC,UAAU;EACnBC,YAAoBC,UAAuB;IAAvB,KAAAA,UAAU,GAAVA,UAAU;EAE9B;EAEOC,MAAMA,CAAEC,QAAgB;IAC3B,IAAIC,MAAM,GAAG,IAAIP,UAAU,EAAE;IAC7BO,MAAM,CAACC,GAAG,CAAC,OAAO,EAAEP,QAAQ,CAACQ,wBAAwB,CAAC;IACtDF,MAAM,CAACC,GAAG,CAAC,GAAG,EAAEF,QAAQ,CAAC;IACzBC,MAAM,CAACC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACtB,OAAO,IAAI,CAACJ,UAAU,CAACM,GAAG,CAAMT,QAAQ,CAACU,QAAQ,EAAE;MAACJ,MAAM;MAAEK,OAAO,EAAG;IAAU,CAAC,CAAC;EACtF;EAAC,QAAAC,CAAA,G;qBAXQX,UAAU,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVhB,UAAU;IAAAiB,OAAA,EAAVjB,UAAU,CAAAkB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}