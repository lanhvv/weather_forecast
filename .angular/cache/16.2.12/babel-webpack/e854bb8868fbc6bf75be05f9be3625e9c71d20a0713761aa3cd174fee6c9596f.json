{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/service/weather-forecast.service\";\nimport * as i2 from \"src/app/shared/service/geo.service\";\nexport class WeatherForecastsComponent {\n  constructor(weatherForeCastSer, geoService) {\n    this.weatherForeCastSer = weatherForeCastSer;\n    this.geoService = geoService;\n    this.name = \"\";\n    this.weatherForecasts = {};\n  }\n  ngAfterViewInit() {\n    this.getGeo('Viet Nam');\n  }\n  ngOnInit() {}\n  getWeatherForeCast(lat, lon) {\n    this.weatherForeCastSer.getCurrentWeatherForecast(lat, lon).subscribe(response => {\n      this.weatherForeCastSer = response?.body;\n    });\n  }\n  getGeo(location) {\n    this.geoService.getGeo(location).subscribe(response => {\n      const geo = response?.body?.[0];\n      this.name = geo?.local_names?.en ?? geo?.name ?? \"404\";\n      this.getWeatherForeCast(geo?.lat, geo?.lon);\n    });\n  }\n  static #_ = this.ɵfac = function WeatherForecastsComponent_Factory(t) {\n    return new (t || WeatherForecastsComponent)(i0.ɵɵdirectiveInject(i1.WeatherForecastService), i0.ɵɵdirectiveInject(i2.GeoService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherForecastsComponent,\n    selectors: [[\"app-weather-forecasts\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[1, \"body\"], [1, \"main\"], [1, \"search\"], [1, \"waether-forecasts\"], [1, \"current-weather\"], [1, \"weather-info\"]],\n    template: function WeatherForecastsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(13, \"div\", 5)(14, \"div\", 5)(15, \"div\", 5)(16, \"div\", 5)(17, \"div\", 5)(18, \"div\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.weatherForecasts == null ? null : ctx.weatherForecasts.main == null ? null : ctx.weatherForecasts.main.temp);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.weatherForecasts == null ? null : ctx.weatherForecasts.waether == null ? null : ctx.weatherForecasts.waether[0] == null ? null : ctx.weatherForecasts.waether[0].desciption);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"Max: \", ctx.weatherForecasts == null ? null : ctx.weatherForecasts.main == null ? null : ctx.weatherForecasts.main.temp_max, \" Min: \", ctx.weatherForecasts == null ? null : ctx.weatherForecasts.main == null ? null : ctx.weatherForecasts.main.temp_min, \"\");\n      }\n    },\n    styles: [\".body[_ngcontent-%COMP%] {\\n    background-color: blue;\\n    background-image: linear-gradient(to bottom right, rgb(40, 40, 241), rgb(68, 212, 238));\\n    opacity: 0.8;\\n    overflow: hidden;\\n}\\n\\n.main[_ngcontent-%COMP%] {\\n    width: 30vw;\\n    height: 90vh;\\n    margin: 4vh auto;\\n    border-radius: 20px;\\n    background-color: white;\\n    overflow: auto;\\n}\\n\\n.search[_ngcontent-%COMP%] {\\n    height: 10%;\\n    border: 0.5px solid black;\\n}\\n\\n.waether-forecasts[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: flex-start;\\n    row-gap: 10px;\\n    flex-wrap: wrap;\\n    justify-content: space-between;\\n}\\n\\n.current-weather[_ngcontent-%COMP%] {\\n    min-width: 100%;\\n    max-width: 100%;\\n    height: 400px;\\n    border: 0.5px solid black;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n}\\n\\n.weather-info[_ngcontent-%COMP%] {\\n    width: calc(50% - 10px);\\n    height: 200px;\\n    border: 0.5px solid black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy93ZWF0aGVyLWZvcmVjYXN0cy93ZWF0aGVyLWZvcmVjYXN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLHVGQUF1RjtJQUN2RixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLGVBQWU7SUFDZiw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZUFBZTtJQUNmLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLHlCQUF5QjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbIi5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20gcmlnaHQsIHJnYig0MCwgNDAsIDI0MSksIHJnYig2OCwgMjEyLCAyMzgpKTtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLm1haW4ge1xuICAgIHdpZHRoOiAzMHZ3O1xuICAgIGhlaWdodDogOTB2aDtcbiAgICBtYXJnaW46IDR2aCBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5zZWFyY2gge1xuICAgIGhlaWdodDogMTAlO1xuICAgIGJvcmRlcjogMC41cHggc29saWQgYmxhY2s7XG59XG5cbi53YWV0aGVyLWZvcmVjYXN0cyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICByb3ctZ2FwOiAxMHB4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5jdXJyZW50LXdlYXRoZXIge1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgICBib3JkZXI6IDAuNXB4IHNvbGlkIGJsYWNrO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ud2VhdGhlci1pbmZvIHtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAxMHB4KTtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICAgIGJvcmRlcjogMC41cHggc29saWQgYmxhY2s7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["WeatherForecastsComponent","constructor","weatherForeCastSer","geoService","name","weatherForecasts","ngAfterViewInit","getGeo","ngOnInit","getWeatherForeCast","lat","lon","getCurrentWeatherForecast","subscribe","response","body","location","geo","local_names","en","_","i0","ɵɵdirectiveInject","i1","WeatherForecastService","i2","GeoService","_2","selectors","decls","vars","consts","template","WeatherForecastsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","main","temp","waether","desciption","ɵɵtextInterpolate2","temp_max","temp_min"],"sources":["/home/lanhvv/project/angular/weather_forecast/src/app/modules/weather-forecasts/weather-forecasts.component.ts","/home/lanhvv/project/angular/weather_forecast/src/app/modules/weather-forecasts/weather-forecasts.component.html"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { GeoService } from 'src/app/shared/service/geo.service';\nimport { WeatherForecastService } from 'src/app/shared/service/weather-forecast.service';\n\n@Component({\n  selector: 'app-weather-forecasts',\n  templateUrl: './weather-forecasts.component.html',\n  styleUrls: ['./weather-forecasts.component.css']\n})\nexport class WeatherForecastsComponent implements AfterViewInit {\n  public name: string = \"\";\n  public weatherForecasts: any = {};\n\n  constructor(\n    private weatherForeCastSer: WeatherForecastService,\n    private geoService: GeoService  \n  ){\n  }\n  ngAfterViewInit(): void {\n    this.getGeo('Viet Nam');\n  }\n\n  ngOnInit(): void {\n  }\n\n  private getWeatherForeCast(lat: any, lon: any) {\n    this.weatherForeCastSer.getCurrentWeatherForecast(lat, lon).subscribe(response => {\n      this.weatherForeCastSer = response?.body;\n    });\n  }\n\n  private getGeo(location: string) {\n    this.geoService.getGeo(location).subscribe(response => {\n      const geo = response?.body?.[0];\n      this.name = geo?.local_names?.en ?? geo?.name ?? \"404\";\n      this.getWeatherForeCast(geo?.lat, geo?.lon);\n    });\n  }\n}\n","<div class=\"body\">\n    <div class=\"main\">\n        <div class=\"search\"></div>\n        <div class=\"waether-forecasts\">\n            <div class=\"current-weather\">\n                <h2>{{name}}</h2>\n                <p>{{weatherForecasts?.main?.temp}}</p>\n                <p>{{weatherForecasts?.waether?.[0]?.desciption}}</p>\n                <p>Max: {{weatherForecasts?.main?.temp_max}} Min: {{weatherForecasts?.main?.temp_min}}</p>\n            </div>\n            <div class=\"weather-info\"></div>\n            <div class=\"weather-info\"></div>\n            <div class=\"weather-info\"></div>\n            <div class=\"weather-info\"></div>\n            <div class=\"weather-info\"></div>\n            <div class=\"weather-info\"></div>\n        </div>\n    </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}