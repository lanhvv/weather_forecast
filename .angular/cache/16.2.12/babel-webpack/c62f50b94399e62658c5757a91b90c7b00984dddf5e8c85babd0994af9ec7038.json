{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WeatherForecastsComponent = class WeatherForecastsComponent {\n  constructor(weatherForeCastSer, geoService) {\n    this.weatherForeCastSer = weatherForeCastSer;\n    this.geoService = geoService;\n    this.name = \"\";\n    this.weatherForecasts = {};\n  }\n  ngOnInit() {\n    this.getGeo('Viet Nam');\n  }\n  getWeatherForeCast(lat, lon) {\n    this.weatherForeCastSer.getCurrentWeatherForecast(lat, lon).subscribe(response => {\n      this.weatherForeCastSer = response?.body;\n    });\n  }\n  getGeo(location) {\n    this.geoService.getGeo(location).subscribe(response => {\n      const geo = response?.body?.[0];\n      this.name = geo?.local_names?.en ?? geo?.name ?? \"404\";\n      this.getWeatherForeCast(geo?.lat, geo?.lon);\n    });\n  }\n};\nWeatherForecastsComponent = __decorate([Component({\n  selector: 'app-weather-forecasts',\n  templateUrl: './weather-forecasts.component.html',\n  styleUrls: ['./weather-forecasts.component.css']\n})], WeatherForecastsComponent);","map":{"version":3,"names":["Component","WeatherForecastsComponent","constructor","weatherForeCastSer","geoService","name","weatherForecasts","ngOnInit","getGeo","getWeatherForeCast","lat","lon","getCurrentWeatherForecast","subscribe","response","body","location","geo","local_names","en","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/lanhvv/project/angular/weather_forecast/src/app/modules/weather-forecasts/weather-forecasts.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GeoService } from 'src/app/shared/service/geo.service';\nimport { WeatherForecastService } from 'src/app/shared/service/weather-forecast.service';\n\n@Component({\n  selector: 'app-weather-forecasts',\n  templateUrl: './weather-forecasts.component.html',\n  styleUrls: ['./weather-forecasts.component.css']\n})\nexport class WeatherForecastsComponent implements OnInit {\n  public name: string = \"\";\n  public weatherForecasts = {};\n\n  constructor(\n    private weatherForeCastSer: WeatherForecastService,\n    private geoService: GeoService  \n  ){\n  }\n\n  ngOnInit(): void {\n    this.getGeo('Viet Nam');\n  }\n\n  private getWeatherForeCast(lat: any, lon: any) {\n    this.weatherForeCastSer.getCurrentWeatherForecast(lat, lon).subscribe(response => {\n      this.weatherForeCastSer = response?.body;\n    });\n  }\n\n  private getGeo(location: string) {\n    this.geoService.getGeo(location).subscribe(response => {\n      const geo = response?.body?.[0];\n      this.name = geo?.local_names?.en ?? geo?.name ?? \"404\";\n      this.getWeatherForeCast(geo?.lat, geo?.lon);\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAIpCC,YACUC,kBAA0C,EAC1CC,UAAsB;IADtB,KAAAD,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,UAAU,GAAVA,UAAU;IALb,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,gBAAgB,GAAG,EAAE;EAM5B;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,CAAC,UAAU,CAAC;EACzB;EAEQC,kBAAkBA,CAACC,GAAQ,EAAEC,GAAQ;IAC3C,IAAI,CAACR,kBAAkB,CAACS,yBAAyB,CAACF,GAAG,EAAEC,GAAG,CAAC,CAACE,SAAS,CAACC,QAAQ,IAAG;MAC/E,IAAI,CAACX,kBAAkB,GAAGW,QAAQ,EAAEC,IAAI;IAC1C,CAAC,CAAC;EACJ;EAEQP,MAAMA,CAACQ,QAAgB;IAC7B,IAAI,CAACZ,UAAU,CAACI,MAAM,CAACQ,QAAQ,CAAC,CAACH,SAAS,CAACC,QAAQ,IAAG;MACpD,MAAMG,GAAG,GAAGH,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC;MAC/B,IAAI,CAACV,IAAI,GAAGY,GAAG,EAAEC,WAAW,EAAEC,EAAE,IAAIF,GAAG,EAAEZ,IAAI,IAAI,KAAK;MACtD,IAAI,CAACI,kBAAkB,CAACQ,GAAG,EAAEP,GAAG,EAAEO,GAAG,EAAEN,GAAG,CAAC;IAC7C,CAAC,CAAC;EACJ;CACD;AA3BYV,yBAAyB,GAAAmB,UAAA,EALrCpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACWtB,yBAAyB,CA2BrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}