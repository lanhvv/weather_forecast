{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { Constant } from \"src/app/shared/utils/constant.util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherForecastService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getCurrentWeatherForecast(lat, lon) {\n    let params = new HttpParams();\n    params.set(\"appid\", Constant.API_KEY_WEATHER_FORECAST);\n    params.set(\"lat\", lat);\n    params.set(\"lon\", lon);\n    return this.httpClient.get(Constant.PATH_WEATHER_FORECAST, {\n      params,\n      observe: \"response\"\n    });\n  }\n  static #_ = this.ɵfac = function WeatherForecastService_Factory(t) {\n    return new (t || WeatherForecastService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeatherForecastService,\n    factory: WeatherForecastService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpParams","Constant","WeatherForecastService","constructor","httpClient","getCurrentWeatherForecast","lat","lon","params","set","API_KEY_WEATHER_FORECAST","get","PATH_WEATHER_FORECAST","observe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/home/lanhvv/project/angular/weather_forecast/src/app/shared/service/weather-forecast.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport {  Injectable } from \"@angular/core\";\nimport {Constant} from \"src/app/shared/utils/constant.util\"\n@Injectable()\nexport class WeatherForecastService {\n    constructor(private httpClient : HttpClient) {\n\n    }\n    \n    public getCurrentWeatherForecast (lat: any, lon: any) {\n        let params = new HttpParams();\n        params.set(\"appid\", Constant.API_KEY_WEATHER_FORECAST);\n        params.set(\"lat\", lat);\n        params.set(\"lon\", lon);\n        return this.httpClient.get<any>(Constant.PATH_WEATHER_FORECAST, {params, observe : \"response\"});\n    }\n}"],"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAAQC,QAAQ,QAAO,oCAAoC;;;AAE3D,OAAM,MAAOC,sBAAsB;EAC/BC,YAAoBC,UAAuB;IAAvB,KAAAA,UAAU,GAAVA,UAAU;EAE9B;EAEOC,yBAAyBA,CAAEC,GAAQ,EAAEC,GAAQ;IAChD,IAAIC,MAAM,GAAG,IAAIR,UAAU,EAAE;IAC7BQ,MAAM,CAACC,GAAG,CAAC,OAAO,EAAER,QAAQ,CAACS,wBAAwB,CAAC;IACtDF,MAAM,CAACC,GAAG,CAAC,KAAK,EAAEH,GAAG,CAAC;IACtBE,MAAM,CAACC,GAAG,CAAC,KAAK,EAAEF,GAAG,CAAC;IACtB,OAAO,IAAI,CAACH,UAAU,CAACO,GAAG,CAAMV,QAAQ,CAACW,qBAAqB,EAAE;MAACJ,MAAM;MAAEK,OAAO,EAAG;IAAU,CAAC,CAAC;EACnG;EAAC,QAAAC,CAAA,G;qBAXQZ,sBAAsB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBjB,sBAAsB;IAAAkB,OAAA,EAAtBlB,sBAAsB,CAAAmB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}